#summary The best Entrelacs system reference design consists in you, a pen, and a sheet of paper.

You can experiment with the arrow paradigm using only a sheet of paper and a pencil.

 # Choose an interesting sample of information. I suggest an intricate set of predicates like: "cows make milk" ; "babies drink milk" ; "cows drink water" ; "drink is a verb" ; "water boiling point is 100°C", etc.
 # takes information to pieces so to get a structure of pairs of atomic concepts. For example: (babies (drink milk)).
 # Put atomic concepts on the paper by using some signs (words, numbers or doodles). But be careful, represent each concept only once.
 # Then draw arrows between paired signs, like (drink → milk)
 # Then draw arrows between paired arrows, like (babies → (make → milk))
 # repeat previous steps til all arrows are drawn. But be careful, don't do as with _Writing_! Every arrow (e.g. make → milk) must be drawn only once! A pencil drawing doesn't mimic an arrows space if several arrows share the same ends.

Once finished, you may enjoy your work by noticing that
 * Whatever a value (says _milk_), it is connected to all the information it belongs to.
 * It works the same with a relation (says _drink  →  milk_).
 * One can add new information without erasing or modifying anything already drawn! More specifically, one can consider an existing piece of information in a more abstract level. Says: (at → (sea → level))  → ((water → (boiling → point)) → 100°C)

Extra step: replace signs by _entrelacs_, that is discrete closed structures of arrows like 'orobouros', 'Yin-Yang', 'Triketra'... Now there's only arrows on your page and yet the drawing still represents information.

So what did we do? Did we invent a new data structure? Not really. We rather drew a data structure in a radically different way than we're accustomed to. We used a pen and a paper sheet as a device to store arrows, namely an [ArrowsSpace arrows space].

With some self-discipline, a sheet of paper actually makes a quite good _arrow space_. In a computer system, one needs for an [ArrowsSpace arrows space] software to leverage available hardware.