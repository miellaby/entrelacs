#summary The Entrelacs System Prototype combines an "Arrows Space" and a "virtual machine".
#labels Featured,Phase-Design

<wiki:toc max_depth="1" />

=arrow paradigm=

Remember: The Entrelacs System deals with "arrows". Please see ArrowParadigm first.

=arrows space=

http://entrelacs.googlecode.com/svn/trunk/doc/pictures/mem0.png  

The EntrelacsSystem provides an homogeneous support to store knowledge as arrows, namely the "Arrows Space". Please see ArrowsSpace.

=virtual machine & prim language=

To make a full use of the ArrowParadigm and the ArrowsSpace, the EntrelacsSystem includes a virtual machine running on top of the ArrowsSpace. This computing environment is somewhat similar to a minimalistic Lisp machine with additional features provided by the ArrowParadigm. Its scope is mainly focused on arrow queries. Please see EntrelacsVirtualMachine.

The Virtual Machine is programmable with a "prim language". Please see EntrelacsLanguage.

=Network and C API of the Entrelacs prototype==

The Entrelacs Prototype stands as a client/server software on top of a GNU/Linux platform.

An HTTP/AJAX/COMET/REST based protocol allows "arrows publishers" and "arrows subscribers" (corresponding to applicative agents) to communicate with or within a running Entrelacs System.

Moreover, a C API allows to plugs VM extensions as special effect arrows. Please  see the EntrelacsPrototypeArchitecture page for further readings.

=Other questions?=
Bad luck. That's all. Try "Work InProgress" page too.